SCM Polling
============

1)Jenkins polls SCM based on a defined schedule

2)If new commits are found, the build is triggered.

Pros: Always builds the latest code changes
Cons: Frequent polling can use a lot of server resources.


Periodic Builds
===============

1)Jenkins builds at specified intervals, regardless of code changes,
 
2)You set a cron-like schedule for builds,Builds occur based on this schedule

Pros: Regular builds, independent of code changes.
Cons: May build the same code if no new commits exist



GitHub Webhook
==============

GitHub notifies Jenkins of code changes immediately.

Pros: Immediate build triggering, reducing lag.

Cons: Requires proper webhook configuration.

webhook congiguration
====================== 
 setup build config -> click -GitHub Webhook
Go to ->github ->select your repository  nd branch -> on right side click on settings->select webhooks -> payload block  fill the jenkins <url>http://65.1.95.162:8080/github-webhook/

nd select contextpath : json --> click addit















Code Coverage
=============
Tool: JaCoCo

Goal: Ensure code coverage is at least 80%.


1)Identify untested code using JaCoCo reports.

2)Write more tests for uncovered areas.

NOTE:Set Jenkins to fail builds if coverage is below 80%












discard old builds
===================

create an another job with same configuration of other job
==========================================================



Jenkins server stop and start issue
====================================

old: 52.66.196.163

new: 65.2.171.155


/var/lib/jenkins/jenkins.model.JenkinsLocationConfiguration.xml   ---> update new ip here and restart jenkins



Plugins in jenkins server
=========================

Deploy to container*
===================

--> Deploy the our application into the tomcat server 


maven integration
==================

if you want to create a maven project type then use this plugin.


safeRestart
===========

systemctl restart jenkins ---> It is in linux server, But we dont have permission to access it , Then how to restart it.


restart --->http://65.0.199.60:8080/restart

safeRestart -->http://65.0.199.60:8080/safeRestart

IQ] what is the difference between restart and safeRestart ?

restart: It will stop the running jobs and then restarted

safeRestart: It will wait for complition of all the jobs and restarted


NOTE: for safeRestart we have plugin called as a safeRestart, Install and try it




next Build Number
=================

--> After insatlling this plugin we can give our own build number, The next number must be greater than the previous build number only.

NOTE: in linux server /var/lib/jenkins/jobs/jio-dev/jobs/nextBuildNumber file is available , But some time times we dont have an access to linux server to use this





JaCoCo
======

By using this plugin we can stop the deployment through code coverage percentage.


ssh agent 
=========
we will discuss in the pipeline project

Audit Trail ***
===========

I will help us to track the jenkins activity like create,delete jobs, etc

--> install the plugin

--> dashboard --> manage jenkins --> system --> audit trail --> add logger --> log file --> log rotation: /var/lib/jenkins/audit-trail.log
    size in MB: 20
    Log file count: 5



audit-trail.log.0  

audit-trail.log.1

audit-trail.log.2

audit-trail.log.3

audit-trail.log.4





tail -f audit-trail.log.0  --> go and trigger the build








Blue ocean plugin
=================




Build name and Description setter
================================

step 1: Install plug-in

step 2 : Dash board --> job --> configuration --> Build Environment --> select Set Build Name --> jio-dev-#${BUILD_NUMBER}









Thin backup 
===========
will discuss in jenkins backup

Role based authentication
=========================
will discuss in jenkins security




=====================================================================================

Build with parameters
======================

Dashboard --> job --> configuration --> General --> select This Project is parametirized --> add parameter --> choice parameter -->

   names: BranchNames
   Choices: main 
            dev
            qa
--> save 


NOTE: under the source code section pass the names 
    
      */${BranchNames}



How to create a view?
=====================


enable and diable the project(jobs)
====================================
